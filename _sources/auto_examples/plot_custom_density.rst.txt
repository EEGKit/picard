

.. _sphx_glr_auto_examples_plot_custom_density.py:


==================================
Using a custom density with Picard
==================================

This example shows how to use custom densities using Picard




.. code-block:: python


    # Author: Pierre Ablin <pierre.ablin@inria.fr>
    #         Alexandre Gramfort <alexandre.gramfort@inria.fr>
    # License: BSD 3 clause

    import numpy as np
    import matplotlib.pyplot as plt
    from picard import picard, permute

    print(__doc__)







Build a custom density where the score function is x + tanh(x)



.. code-block:: python



    class CustomDensity(object):
        def log_lik(self, Y):
            return Y ** 2 / 2 + np.log(np.cosh(Y))

        def score_and_der(self, Y):
            tanhY = np.tanh(Y)
            return Y + tanhY, 2 - tanhY ** 2


    custom_density = CustomDensity()







Plot the corresponding functions



.. code-block:: python


    x = np.linspace(-2, 2, 100)
    log_likelihood = custom_density.log_lik(x)
    psi, psi_der = custom_density.score_and_der(x)

    names = ['log-likelihood', 'score', 'score derivative']

    plt.figure()
    for values, name in zip([log_likelihood, psi, psi_der], names):
        plt.plot(x, values, label=name)
    plt.legend()
    plt.title("Custom density")
    plt.show()




.. image:: /auto_examples/images/sphx_glr_plot_custom_density_001.png
    :align: center




Run Picard on toy dataset using this density



.. code-block:: python


    rng = np.random.RandomState(0)
    N, T = 5, 1000
    S = rng.laplace(size=(N, T))
    A = rng.randn(N, N)
    X = np.dot(A, S)
    K, W, Y = picard(X, fun=custom_density)
    plt.figure()
    plt.imshow(permute(W.dot(K).dot(A)), interpolation='nearest')
    plt.title('Difference between the mix and the estimated matrix')
    plt.show()



.. image:: /auto_examples/images/sphx_glr_plot_custom_density_002.png
    :align: center




**Total running time of the script:** ( 0 minutes  0.135 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_custom_density.py <plot_custom_density.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_custom_density.ipynb <plot_custom_density.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
